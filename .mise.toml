
[env]
SERVER = "hobl.at"
SQUARE_PATH="/home/square"
MISE_CONFIG_FILE="/etc/mise/config.toml"
ENV_FILE="/etc/environment"

[tools]
sops = "latest"

[tasks.init]
description = 'Idempotent Initialization'
hide = true
file = "./scripts/init"

[tasks.up]
description = 'Idempotent Upload'
hide = true
file = "./scripts/up"

[tasks.upinit]
depends=["init", "up"]

[tasks."setup:local"]
description = 'Install'
run = """
#!/usr/bin/env bash
set -euxo pipefail
sops -d --extract '["public_key"]' --output ~/.ssh/id_ed25519_personal-server.pub secrets/ssh.yml
sops -d --extract '["private_key"]' --output ~/.ssh/id_ed25519_personal-server secrets/ssh.yml
chmod 600 ~/.ssh/id_ed25519_personal-server.*
grep -q hobl.at ~/.ssh/config > /dev/null 2>&1 || cat config/ssh_client_config >> ~/.ssh/config
"""

[tasks."setup:packages"]
description = 'Packages'
run = """
#!/usr/bin/env bash
set -euxo pipefail
ssh root@$SERVER 'apt-get update -y && apt-get install -y nala'
ssh root@$SERVER 'nala -y install curl vim htop ufw git unzip gnupg acl'
# Enable automatic security Updates
ssh root@$SERVER 'echo "unattended-upgrades unattended-upgrades/enable_auto_updates boolean true" | debconf-set-selections && apt-get install unattended-upgrades -y'
"""

[tasks."setup:ssh"]
description = 'Setup ssh'
run = """
#!/usr/bin/env bash
set -euxo pipefail
# Check if the file is different from our git repository and if it is the case re-upload and restart the ssh server
ssh root@$SERVER "cat /etc/ssh/sshd_config" | diff  - config/sshd_config || (scp config/sshd_config root@$SERVER:/etc/ssh/sshd_config && ssh root@$SERVER systemctl restart ssh.service)
"""

[tasks."setup:firewall"]
description = 'Setup firewall'
run = """
#!/usr/bin/env bash
set -euxo pipefail
scp config/ufw.sh root@$SERVER:/tmp/ufw.sh
ssh root@$SERVER 'chmod +x /tmp/ufw.sh && /tmp/ufw.sh'
"""

[tasks.caddy-config]
description = 'Print caddy config'
run = """
#!/usr/bin/env bash
set -euxo pipefail
ssh $SERVER 'curl http://localhost:2019/config/'
"""

# [tasks."repos"]
# description = 'Setup repos'
# run = """
# #!/usr/bin/env bash
# set -euxo pipefail
# ssh soft repo create personal-website
# ssh soft repo webhooks create personal-website http://0.0.0.0:9000/hooks/redeploy-website -e push
# """

# [tasks.aspect]
# description = 'Manage aspect'
# depends = ["upinit"]
# run = """
# #!/usr/bin/env bash
# set -euxo pipefail
# aspect=$1
# cmd=$2
# ssh root@$SERVER "cd /home/square/aspects/$aspect && mise install && mise run $cmd"
# """

[tasks.aspect]
description = 'Exec aspect'
run = """
#!/usr/bin/env bash
set -euxo pipefail
aspect=$1
cmd=$2
ssh root@$SERVER "cd ~/aspects/$aspect && mise install && mise run $cmd"
"""
